"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[255],{59298:e=>{e.exports=JSON.parse('{"functions":[{"name":"setConfig","desc":"```lua\\nLapis.setConfig({\\n\\tsaveAttempts = 10,\\n\\tshowRetryWarnings = false,\\n})\\n```\\n\\n```lua\\n-- The default config values:\\n{\\n\\tsaveAttempts = 5,\\n\\tloadAttempts = 20,\\n\\tloadRetryDelay = 1,\\n\\tshowRetryWarnings = true,\\n\\tdataStoreService = DataStoreService,\\n}\\n```","params":[{"name":"partialConfig","desc":"","lua_type":"PartialLapisConfig"}],"returns":[],"function_type":"static","source":{"line":87,"path":"src/init.lua"}},{"name":"createCollection","desc":"Creates a [Collection].","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"options","desc":"","lua_type":"CollectionOptions"}],"returns":[{"desc":"","lua_type":"Collection"}],"function_type":"static","source":{"line":107,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"PartialLapisConfig","desc":"","fields":[{"name":"saveAttempts","lua_type":"number?","desc":"Max save/close retry attempts"},{"name":"loadAttempts","lua_type":"number?","desc":"Max load retry attempts"},{"name":"loadRetryDelay","lua_type":"number?","desc":"Seconds between load attempts"},{"name":"showRetryWarnings","lua_type":"boolean?","desc":"Show warning on retry"},{"name":"dataStoreService","lua_type":"(DataStoreService | table)?","desc":"Useful for mocking DataStoreService, especially in a local place"}],"source":{"line":60,"path":"src/init.lua"}},{"name":"Migration","desc":"","lua_type":"(any) -> any | { backwardsCompatible: boolean?, migrate: (any) -> any }","source":{"line":65,"path":"src/init.lua"}},{"name":"CollectionOptions<T>","desc":"","fields":[{"name":"validate","lua_type":"((any) -> true | (false, string))?","desc":"Takes a document\'s data and returns true on success or false and an error on fail."},{"name":"defaultData","lua_type":"T | (key: string) -> T","desc":"If set to a function, it\'s called when a new document is created and is passed the key of the document."},{"name":"freezeData","lua_type":"boolean?","desc":"If `true`, data will be deep frozen and can only be updated immutably by calling [`Document:write`](Document#write). Default: `true`"},{"name":"migrations","lua_type":"{ Migration }?","desc":"Migrations take old data and return new data. Order is first to last. For more information, see: [Migrations](../docs/Migrations)."}],"source":{"line":99,"path":"src/init.lua"}}],"name":"Lapis","desc":"","source":{"line":49,"path":"src/init.lua"}}')}}]);